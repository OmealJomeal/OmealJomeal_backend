<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.config.FeedMapper">

<!--	상품등록-->
	<insert id="feedUpload" parameterType="FeedDTO">
		<![CDATA[
		insert into feed ( feed_id, feed_title, feed_description, feed_recipe, FEED_COOKTIME, FEED_COOKLEVEL, FEED_TIME,FEED_FOOD_TIME,USER_ID  )
		values (feed_seq.nextval,  #{feed_title}, #{feed_description}, #{feed_recipe}, #{feed_cooktime}, #{feed_cooklevel}, sysdate,#{feed_food_time},#{user_id} )
		]]>
	</insert>

	<!-- 피드 아이디 찾아오기 -->
	<select id="selectFeedId" parameterType="FeedDTO" resultType="int">
	<![CDATA[
		SELECT feed_id FROM feed
		WHERE feed_title = #{feed_title} and feed_description=#{feed_description} and feed_recipe=#{feed_recipe}
		]]>
	</select>

	<!--피드에 상품등록-->
	<insert id="feedProductUpload" parameterType="FeedProductDTO">
		<![CDATA[
		insert into feedProduct ( feed_id, product_id )
		values (feed_seq.currval,  #{product_id})
		]]>
	</insert>

	<!--피드만 조회 + 좋아요-->
	<select id="feedView" resultMap="selectMapList">
	<![CDATA[
		select f.feed_id, f.feed_title,
			   f.feed_description,
			   to_char(f.feed_time,'yy-mm-dd HH24:mi:ss') as feed_time,m.user_name
		from feed f, member m
		where  f.user_id=m.user_id
		order by feed_time desc
		]]>
	</select>
	<resultMap type="map" id="selectMapList">
		<result column="feed_id" property="feed_id"/>
		<result column="feed_title" property="feed_title"/>
		<result column="feed_description" property="feed_description"/>
		<result column="feed_time" property="feed_time"/>
		<result column="user_name" property="user_name"/>
	</resultMap>

	<select id="feedViewMainFit" resultMap="selectMapList" parameterType="int">
	<![CDATA[
		select f.feed_id, f.feed_title,
			   f.feed_description,
			   to_char(f.feed_time,'yy-mm-dd HH24:mi:ss') as feed_time,m.user_name
		from feed f, member m
		where  f.user_id=m.user_id and m.user_id=#{user_id}
		]]>
	</select>

	<select id="feedDetail" resultType="FeedDTO" parameterType="int">
	<![CDATA[
		select feed_id, feed_title,
			   feed_description,feed_recipe,feed_cooktime,feed_cooklevel,feed_food_time,user_id,
			   to_char(feed_time,'yy-mm-dd HH24:mi:ss') as feed_time
		from feed
		where feed_id=#{feed_id}
		]]>
	</select>

	<select id="feedDetailProductList" resultType="ProductDTO" parameterType="int">
	<![CDATA[
		select p. product_id,
			   p.product_name, p.PRODUCT_PRICE,p.PRODUCT_DESCRIPTION,p.PRODUCT_CATEGORY,p.PRODUCT_AMOUNT,
			   p.PRODUCT_TIME
		from feedproduct fp, product p
		where fp.product_id=p.product_id and fp.feed_id=#{feed_id}
		]]>
	</select>

	<insert id="feedLikesInsert" parameterType="FeedLikesDTO">
		<![CDATA[
		insert into FEEDLIKES ( FEEDLIKES_ID, FEED_ID, USER_ID, LIKES_CATEGORY)
		values (feedlikes_seq.nextval,  #{feed_id}, #{user_id}, #{likes_category})
		]]>
	</insert>

	<select id="checkFeedLikes" resultType="FeedLikesDTO" parameterType="FeedLikesDTO">
	<![CDATA[
		select *
		from feedlikes
		where feed_id = #{feed_id} and user_id = #{user_id}
		]]>
	</select>

	<select id="feedViewTop" resultMap="selectMapTopList">
	<![CDATA[
		select f.feed_id, f.feed_title,
			   f.feed_description,
			   to_char(f.feed_time,'yy-mm-dd HH24:mi:ss') as feed_time,m.user_name,
			   count(case when likes_category=0 then 1 end) as countLikes
		from feed f, member m,feedlikes fl
		where  f.user_id=m.user_id and f.feed_id=fl.feed_id and rownum<=4
		group by f.feed_id, f.feed_title,f.feed_description, f.feed_time,m.user_name
		order by countLikes desc
		]]>
	</select>
	<resultMap type="map" id="selectMapTopList">
		<result column="feed_id" property="feed_id"/>
		<result column="feed_title" property="feed_title"/>
		<result column="feed_description" property="feed_description"/>
		<result column="feed_time" property="feed_time"/>
		<result column="user_name" property="user_name"/>
		<result column="countLikes" property="countLikes"/>
	</resultMap>
</mapper>